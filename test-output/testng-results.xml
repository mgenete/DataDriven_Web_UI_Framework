<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-06-24T15:12:35Z" name="Automation Tes Suite" finished-at="2019-06-24T15:13:22Z" duration-ms="46997">
    <groups>
    </groups>
    <test started-at="2019-06-24T15:12:35Z" name="invalid reg test" finished-at="2019-06-24T15:12:56Z" duration-ms="20102">
      <class name="com.qa.test.TC_002_RegisterWithInvalidDataTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.qa.test.TC_002_RegisterWithInvalidDataTest@595b007d]" started-at="2019-06-24T15:12:37Z" name="setUp" finished-at="2019-06-24T15:12:49Z" duration-ms="11913" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateRegistration(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.test.TC_002_RegisterWithInvalidDataTest@595b007d]" started-at="2019-06-24T15:12:49Z" name="validateRegistration" data-provider="getTestData" finished-at="2019-06-24T15:12:54Z" duration-ms="4924" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Free Edition]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Fredie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tom@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[tom@gmail.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[tom1234]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[qw12345]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[qw12345]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Please enter your first name] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Please enter your first name] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.qa.test.TC_002_RegisterWithInvalidDataTest.validateRegistration(TC_002_RegisterWithInvalidDataTest.java:48)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:835)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRegistration -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.qa.test.TC_002_RegisterWithInvalidDataTest@595b007d]" started-at="2019-06-24T15:12:54Z" name="endTest" finished-at="2019-06-24T15:12:56Z" duration-ms="1451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- com.qa.test.TC_002_RegisterWithInvalidDataTest -->
    </test> <!-- invalid reg test -->
    <test started-at="2019-06-24T15:12:35Z" name="database validation reg test" finished-at="2019-06-24T15:12:56Z" duration-ms="20222">
      <class name="com.qa.test.TC_003_ValidateDatabaseTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.qa.test.TC_003_ValidateDatabaseTest@35cabb2a]" started-at="2019-06-24T15:12:37Z" name="setUp" finished-at="2019-06-24T15:12:49Z" duration-ms="12087" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateRegistration(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.test.TC_003_ValidateDatabaseTest@35cabb2a]" started-at="2019-06-24T15:12:49Z" name="validateRegistration" data-provider="getTestData" finished-at="2019-06-24T15:12:54Z" duration-ms="4366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Free Edition]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Fredie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tom@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[tom@gmail.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[tom1234]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[qw12345]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[qw12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRegistration -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.qa.test.TC_003_ValidateDatabaseTest@35cabb2a]" started-at="2019-06-24T15:12:54Z" name="endTest" finished-at="2019-06-24T15:12:56Z" duration-ms="1967" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- com.qa.test.TC_003_ValidateDatabaseTest -->
    </test> <!-- database validation reg test -->
    <test started-at="2019-06-24T15:12:35Z" name="valid reg test" finished-at="2019-06-24T15:13:22Z" duration-ms="46997">
      <class name="com.qa.test.TC_001_RegisterWithValidDataTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.qa.test.TC_001_RegisterWithValidDataTest@47af7f3d]" started-at="2019-06-24T15:12:36Z" name="setUp" finished-at="2019-06-24T15:12:48Z" duration-ms="12321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validatePageTitle()[pri:0, instance:com.qa.test.TC_001_RegisterWithValidDataTest@47af7f3d]" started-at="2019-06-24T15:12:48Z" name="validatePageTitle" finished-at="2019-06-24T15:12:48Z" duration-ms="84" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePageTitle -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.qa.test.TC_001_RegisterWithValidDataTest@47af7f3d]" started-at="2019-06-24T15:12:48Z" name="endTest" finished-at="2019-06-24T15:12:56Z" duration-ms="7713" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.qa.test.TC_001_RegisterWithValidDataTest@47af7f3d]" started-at="2019-06-24T15:12:56Z" name="setUp" finished-at="2019-06-24T15:13:01Z" duration-ms="5791" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateRegistration(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.test.TC_001_RegisterWithValidDataTest@47af7f3d]" started-at="2019-06-24T15:13:01Z" name="validateRegistration" data-provider="getTestData" finished-at="2019-06-24T15:13:04Z" duration-ms="2390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Free Edition]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tom]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Fredie]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tom@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[tom@gmail.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[tom1234]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[qw12345]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[qw12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRegistration -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.qa.test.TC_001_RegisterWithValidDataTest@47af7f3d]" started-at="2019-06-24T15:13:04Z" name="endTest" finished-at="2019-06-24T15:13:05Z" duration-ms="824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.qa.test.TC_001_RegisterWithValidDataTest@47af7f3d]" started-at="2019-06-24T15:13:05Z" name="setUp" finished-at="2019-06-24T15:13:10Z" duration-ms="5572" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateRegistration(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.test.TC_001_RegisterWithValidDataTest@47af7f3d]" started-at="2019-06-24T15:13:10Z" name="validateRegistration" data-provider="getTestData" finished-at="2019-06-24T15:13:13Z" duration-ms="2296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Free Edition]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Peter]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Song]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tom@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[tom@gmail.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[peter1234]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[qw12345]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[qw12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRegistration -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.qa.test.TC_001_RegisterWithValidDataTest@47af7f3d]" started-at="2019-06-24T15:13:13Z" name="endTest" finished-at="2019-06-24T15:13:13Z" duration-ms="804" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.qa.test.TC_001_RegisterWithValidDataTest@47af7f3d]" started-at="2019-06-24T15:13:13Z" name="setUp" finished-at="2019-06-24T15:13:19Z" duration-ms="5807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateRegistration(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.test.TC_001_RegisterWithValidDataTest@47af7f3d]" started-at="2019-06-24T15:13:19Z" name="validateRegistration" data-provider="getTestData" finished-at="2019-06-24T15:13:22Z" duration-ms="2371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Free Edition]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mark]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Ling]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tom@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[tom@gmail.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[mark1234]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[qw12345]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[qw12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRegistration -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.qa.test.TC_001_RegisterWithValidDataTest@47af7f3d]" started-at="2019-06-24T15:13:22Z" name="endTest" finished-at="2019-06-24T15:13:22Z" duration-ms="860" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- com.qa.test.TC_001_RegisterWithValidDataTest -->
    </test> <!-- valid reg test -->
  </suite> <!-- Automation Tes Suite -->
</testng-results>
